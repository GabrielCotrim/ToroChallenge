// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToroChallenge.Infrastructure.Data;

namespace ToroChallenge.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211123185917_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ToroChallenge.Domain.Entities.Ativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CurrentPrice")
                        .HasColumnType("float");

                    b.Property<string>("Symbol")
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("tb_ativos", "identidade");
                });

            modelBuilder.Entity("ToroChallenge.Domain.Entities.Patrimonio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Saldo")
                        .HasColumnType("float");

                    b.Property<int>("TotalAtivos")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("tb_patrimonios", "identidade");
                });

            modelBuilder.Entity("ToroChallenge.Domain.Entities.PatrimonioAtivos", b =>
                {
                    b.Property<int>("PatrimonioId")
                        .HasColumnType("int");

                    b.Property<int>("AtivoId")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeAtivos")
                        .HasColumnType("int");

                    b.HasKey("PatrimonioId", "AtivoId");

                    b.HasIndex("AtivoId");

                    b.ToTable("tb_patrimonio_ativos", "identidade");
                });

            modelBuilder.Entity("ToroChallenge.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelido")
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("tb_usuarios", "identidade");
                });

            modelBuilder.Entity("ToroChallenge.Domain.Entities.Patrimonio", b =>
                {
                    b.HasOne("ToroChallenge.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ToroChallenge.Domain.Entities.PatrimonioAtivos", b =>
                {
                    b.HasOne("ToroChallenge.Domain.Entities.Ativo", "Ativo")
                        .WithMany("PatrimonioAtivos")
                        .HasForeignKey("AtivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToroChallenge.Domain.Entities.Patrimonio", "Patrimonio")
                        .WithMany("PatrimonioAtivos")
                        .HasForeignKey("PatrimonioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ativo");

                    b.Navigation("Patrimonio");
                });

            modelBuilder.Entity("ToroChallenge.Domain.Entities.Ativo", b =>
                {
                    b.Navigation("PatrimonioAtivos");
                });

            modelBuilder.Entity("ToroChallenge.Domain.Entities.Patrimonio", b =>
                {
                    b.Navigation("PatrimonioAtivos");
                });
#pragma warning restore 612, 618
        }
    }
}
